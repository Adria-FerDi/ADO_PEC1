anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
annotatedTable <- function(Tab, anotationsPackage)
{
Tab <- cbind(PROBEID=rownames(Tab), Tab)
myProbes <- rownames(Tab)
thePackage <- eval(parse(text = anotationsPackage))
geneAnnots <- AnnotationDbi::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTab <- merge(x=geneAnnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTab)
}
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
BiocManager::install("annaffy")
require(annaffy)
at<-<- aafTableAnn(Tab_CvsOb,"pd.zebgene.1.1.st")
require(annaffy)
at<- aafTableAnn(Tab_CvsOb,"pd.zebgene.1.1.st")
require(annaffy)
genesSelected_Mutant <- rownames(Tab_CvsOb)
at<- aafTableAnn(Tab_CvsOb,"pd.zebgene.1.1.st")
require(annaffy)
genesSelected_Mutant <- rownames(Tab_CvsOb)
at<- aafTableAnn(genesSelected_Mutant,"pd.zebgene.1.1.st")
head(at)
require(annaffy)
genesSelected_Mutant <- rownames(Tab_CvsOb)
at<- aafTableAnn(genesSelected_Mutant,"pd.zebgene.1.1.st")
at
annotatedTable <- function(Tab, anotationsPackage)
{
Tab <- cbind(PROBEID=rownames(Tab), Tab)
myProbes <- rownames(Tab)
thePackage <- eval(parse(text = anotationsPackage))
geneAnnots <- dtplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTab <- merge(x=geneAnnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTab)
}
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
knitr::opts_chunk$set(echo = TRUE)
annotatedTable <- function(Tab, anotationsPackage)
{
Tab <- cbind(PROBEID=rownames(Tab), Tab)
myProbes <- rownames(Tab)
thePackage <- eval(parse(text = anotationsPackage))
geneAnnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTab <- merge(x=geneAnnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTab)
}
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
knitr::opts_chunk$set(echo = TRUE)
#Treballant des del RProject generat:
carp_global <- getwd()
dir.create("dades")
carp_dades <- file.path(carp_global, "dades/")
dir.create("resultats")
carp_resultats <- file.path(carp_global, "resultats/")
library(oligo)
library(Biobase)
cel_files <- list.celfiles(carp_dades, full.names = TRUE)
targets <- read.AnnotatedDataFrame(file.path(carp_dades, "targets.csv"), header = TRUE, row.names = 1, sep= ";")
raw_data <- read.celfiles(cel_files, phenoData = targets)
targets_show<-pData(raw_data)
targets_show$FileName<-"X"
targets_show
knitr::include_graphics("resultats/QM_Raw/QM_RAW_resum.png")
library(ggplot2)
library(ggrepel)
boxplot(raw_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(raw_data)))))
rma_data <- rma(raw_data)
knitr::include_graphics("resultats/QM_Rma/QM_RMA_resum.png")
boxplot(rma_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(rma_data)))))
sds <- apply(exprs(rma_data), 1, sd)
plot(1:length(sds), sort(sds), xlab="Gens de menys a més variable", ylab="Desviació estàndard")
abline(v=length(sds)*c(0.9,0.95))
library(genefilter)
library(DBI)
library(pd.zebgene.1.1.st)
annotation(rma_data) <- "pd.zebgene.1.1.st"
filtered <- nsFilter(rma_data, require.entrez = FALSE, remove.dupEntrez = FALSE, var.filter=TRUE, var.func=IQR, var.cutoff=0.7, filterByQuantile=TRUE)
filtered_data <- filtered$eset
print("Nombre de Gens de les dades normalitzades")
nrow(exprs(rma_data))
print("Nombre de gens una vegada filtrats")
nrow(exprs(filtered_data))
print("Nombre de gens eliminats")
print(filtered$filter.log)
knitr::include_graphics("resultats/QM_Filt/QM_FILT_resum.png")
boxplot(filtered_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(filtered_data)))))
library(limma)
matriu_disseny<- model.matrix(~0+targets$Grup, pData(filtered_data))
colnames(matriu_disseny) <- c("Ctrl","Obes","Obes_OF","p53_Ctrl","p53_Obes","p53_Obes_OF")
#Els nomes nomes especifiquen p53 perque p53- suposa problemes en el llenguatge de R per la presència de "-"
matriu_contrast <- makeContrasts ( CvsOb = Ctrl - Obes,
CvsOb_OF = Ctrl - Obes_OF,
ObvsOb_OF = Obes - Obes_OF,
p53_CvsOb = p53_Ctrl - p53_Obes,
p53_CvsOb_OF = p53_Ctrl - p53_Obes_OF,
p53_ObvsOb_OF = p53_Obes - p53_Obes_OF,
levels=matriu_disseny)
fit<-lmFit(filtered_data,matriu_disseny)
fit.main<-contrasts.fit(fit,matriu_contrast)
fit.main<-eBayes(fit.main)
Tab_CvsOb <- topTable(fit.main, number = nrow(fit.main),
coef="CvsOb", adjust="fdr")
Tab_CvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="CvsOb_OF", adjust="fdr")
Tab_ObvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="ObvsOb_OF", adjust="fdr")
Tab_p53_CvsOb <- topTable(fit.main, number = nrow(fit.main),
coef="p53_CvsOb", adjust="fdr")
Tab_p53_CvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="p53_CvsOb_OF", adjust="fdr")
Tab_p53_ObvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="p53_ObvsOb_OF", adjust="fdr")
head(Tab_CvsOb)
head(Tab_CvsOb_OF)
head(Tab_ObvsOb_OF)
head(Tab_p53_CvsOb)
head(Tab_p53_CvsOb_OF)
head(Tab_p53_ObvsOb_OF)
annotatedTable <- function(Tab, anotationsPackage)
{
Tab <- cbind(PROBEID=rownames(Tab), Tab)
myProbes <- rownames(Tab)
thePackage <- eval(parse(text = anotationsPackage))
geneAnnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTab <- merge(x=geneAnnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTab)
}
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
if(!require(dplyr)) { install.packages("dplyr") }; library(dplyr)
if(!require(magrittr)) { install.packages("magrittr") }; library(magrittr)
if(!require(kableExtra)) { install.packages("kableExtra") }; library(kableExtra)
if(!require(tinytex)){ install.packages('tinytex') & tinytex::install_tinytex() }; library(tinytex)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
annotatedTable <- function(Tab, anotationsPackage)
{
Tab <- cbind(PROBEID=rownames(Tab), Tab)
myProbes <- rownames(Tab)
thePackage <- eval(parse(text = anotationsPackage))
geneAnnots <- dplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTab <- merge(x=geneAnnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTab)
}
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- dplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="pd.zebgene.1.1.st")
eval(parse(text="pd.zebgene.1.1.st"))
class("pd.zebgene.1.1.st")
class(pd.zebgene.1.1.st)
BiocManager::install("zebrafish.db")
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- dplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
eval(parse(text = "zebrafish.db"))
class(zebrafish.db)
eval(parse(text = "zebrafish.db"))
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
knitr::opts_chunk$set(echo = TRUE)
#Treballant des del RProject generat:
carp_global <- getwd()
dir.create("dades")
carp_dades <- file.path(carp_global, "dades/")
dir.create("resultats")
carp_resultats <- file.path(carp_global, "resultats/")
library(oligo)
library(Biobase)
cel_files <- list.celfiles(carp_dades, full.names = TRUE)
targets <- read.AnnotatedDataFrame(file.path(carp_dades, "targets.csv"), header = TRUE, row.names = 1, sep= ";")
raw_data <- read.celfiles(cel_files, phenoData = targets)
targets_show<-pData(raw_data)
targets_show$FileName<-"X"
targets_show
knitr::include_graphics("resultats/QM_Raw/QM_RAW_resum.png")
library(ggplot2)
library(ggrepel)
boxplot(raw_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(raw_data)))))
rma_data <- rma(raw_data)
knitr::include_graphics("resultats/QM_Rma/QM_RMA_resum.png")
boxplot(rma_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(rma_data)))))
sds <- apply(exprs(rma_data), 1, sd)
plot(1:length(sds), sort(sds), xlab="Gens de menys a més variable", ylab="Desviació estàndard")
abline(v=length(sds)*c(0.9,0.95))
library(genefilter)
library(DBI)
library(zebrafish.db)
annotation(rma_data) <- "zebrafish.db"
filtered <- nsFilter(rma_data, require.entrez = FALSE, remove.dupEntrez = FALSE, var.filter=TRUE, var.func=IQR, var.cutoff=0.7, filterByQuantile=TRUE)
filtered_data <- filtered$eset
print("Nombre de Gens de les dades normalitzades")
nrow(exprs(rma_data))
print("Nombre de gens una vegada filtrats")
nrow(exprs(filtered_data))
print("Nombre de gens eliminats")
print(filtered$filter.log)
knitr::include_graphics("resultats/QM_Filt/QM_FILT_resum.png")
boxplot(filtered_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(filtered_data)))))
library(limma)
matriu_disseny<- model.matrix(~0+targets$Grup, pData(filtered_data))
colnames(matriu_disseny) <- c("Ctrl","Obes","Obes_OF","p53_Ctrl","p53_Obes","p53_Obes_OF")
#Els nomes nomes especifiquen p53 perque p53- suposa problemes en el llenguatge de R per la presència de "-"
matriu_contrast <- makeContrasts ( CvsOb = Ctrl - Obes,
CvsOb_OF = Ctrl - Obes_OF,
ObvsOb_OF = Obes - Obes_OF,
p53_CvsOb = p53_Ctrl - p53_Obes,
p53_CvsOb_OF = p53_Ctrl - p53_Obes_OF,
p53_ObvsOb_OF = p53_Obes - p53_Obes_OF,
levels=matriu_disseny)
fit<-lmFit(filtered_data,matriu_disseny)
fit.main<-contrasts.fit(fit,matriu_contrast)
fit.main<-eBayes(fit.main)
Tab_CvsOb <- topTable(fit.main, number = nrow(fit.main),
coef="CvsOb", adjust="fdr")
Tab_CvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="CvsOb_OF", adjust="fdr")
Tab_ObvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="ObvsOb_OF", adjust="fdr")
Tab_p53_CvsOb <- topTable(fit.main, number = nrow(fit.main),
coef="p53_CvsOb", adjust="fdr")
Tab_p53_CvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="p53_CvsOb_OF", adjust="fdr")
Tab_p53_ObvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="p53_ObvsOb_OF", adjust="fdr")
head(Tab_CvsOb)
head(Tab_CvsOb_OF)
head(Tab_ObvsOb_OF)
head(Tab_p53_CvsOb)
head(Tab_p53_CvsOb_OF)
head(Tab_p53_ObvsOb_OF)
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- dplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
BiocManager::install("zebrafish.db")
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
BiocManager::install("zebrafish.db0")
library(zebrafish.db0)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db0")
BiocManager::install("zebrafish.db0")
library(zebrafish.db0)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db0")
library(zebrafish.db0)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db0")
BiocManager::install("zebrafishcdf")
library(zebrafishcdf)
library(zebrafishcdf)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafishcdf)
anotatedTab_CvsOb_OF<-annotatedTable(Tab_CvsOb_OF,anotationsPackage="zebrafish.db0")
library(zebrafishcdf)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafishcdf")
BiocManager::install("zebrafishprobe")
library(zebrafishprobe)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafishprobe")
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- dplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
keytypes(zebrafish.db0)
keytypes(zebrafish.db)
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- dplyr::select(thePackage, myProbes, c("GO", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
keytypes(zebrafish.db)
class(zebrfish.db)
class(zebrafish.db)
BiocManager::install("ecoli2.db")
class(zebrafish.db)
class(ecoli2.db)
library(ecoli2.db)
class(zebrafish.db)
class(ecoli2.db)
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
library(mouse430.db)
library(mouse4302.db)
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="mouse4302.db")
class(Tab_CvsOb)
keys(zebrafish.db)
keytypes(zebrafish.db)
keytypes(Tab_CvsOb)
head(Tab_CvsOb)
thePackage <- eval(parse(text = anotPackage))
thePackage <- eval(parse(text = zebrafish.db))
thePackage <- eval(parse(text = "zebrafish.db"))
head(thePackage)
myProbes <- rownames(Tab_CvsOb)
thePackage <- eval(parse(text = "zebrafish.db"))
thePackage
help('select')
help('select')
class(thepackage)
class(thePackage)
test<-select(thePackage, myProbes, c("SYMBOL","GENENAME"))
thePackage <- eval(parse(text = "zebrafish.db"))
test<-select(thePackage, myProbes, c("SYMBOL","GENENAME"))
myProbes <- rownames(Tab_CvsOb)
topTab <- cbind(PROBEID=rownames(Tab_CvsOb), Tab_CvsOb)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
thePackage <- eval(parse(text = "zebrafish.db"))
geneAnots <- dplyr::select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
thePackage
class(thePackage)
thePackage
keytypes(zebrafish.db)
keytypes(thePackage)
class(thePackage)
keytypes(thePackage)
keytypes(zebrafish.db)
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
knitr::opts_chunk$set(echo = TRUE)
#Treballant des del RProject generat:
carp_global <- getwd()
dir.create("dades")
carp_dades <- file.path(carp_global, "dades/")
dir.create("resultats")
carp_resultats <- file.path(carp_global, "resultats/")
library(oligo)
library(Biobase)
cel_files <- list.celfiles(carp_dades, full.names = TRUE)
targets <- read.AnnotatedDataFrame(file.path(carp_dades, "targets.csv"), header = TRUE, row.names = 1, sep= ";")
raw_data <- read.celfiles(cel_files, phenoData = targets)
targets_show<-pData(raw_data)
targets_show$FileName<-"X"
targets_show
knitr::include_graphics("resultats/QM_Raw/QM_RAW_resum.png")
library(ggplot2)
library(ggrepel)
boxplot(raw_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(raw_data)))))
rma_data <- rma(raw_data)
knitr::include_graphics("resultats/QM_Rma/QM_RMA_resum.png")
boxplot(rma_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(rma_data)))))
sds <- apply(exprs(rma_data), 1, sd)
plot(1:length(sds), sort(sds), xlab="Gens de menys a més variable", ylab="Desviació estàndard")
abline(v=length(sds)*c(0.9,0.95))
library(genefilter)
library(DBI)
library(zebrafish.db)
annotation(rma_data) <- "zebrafish.db"
filtered <- nsFilter(rma_data, require.entrez = FALSE, remove.dupEntrez = FALSE, var.filter=TRUE, var.func=IQR, var.cutoff=0.7, filterByQuantile=TRUE)
filtered_data <- filtered$eset
print("Nombre de Gens de les dades normalitzades")
nrow(exprs(rma_data))
print("Nombre de gens una vegada filtrats")
nrow(exprs(filtered_data))
print("Nombre de gens eliminats")
print(filtered$filter.log)
knitr::include_graphics("resultats/QM_Filt/QM_FILT_resum.png")
boxplot(filtered_data, cex.axis = 0.5, las=2, which="all", main="", col = c(rep("gold2", 3), rep("darkorange", 3), rep("red3", 3), rep("lightblue1", 2), rep("deepskyblue3", 3),rep("darkslateblue", 3)))
plot(hclust(dist(t(exprs(filtered_data)))))
library(limma)
matriu_disseny<- model.matrix(~0+targets$Grup, pData(filtered_data))
colnames(matriu_disseny) <- c("Ctrl","Obes","Obes_OF","p53_Ctrl","p53_Obes","p53_Obes_OF")
#Els nomes nomes especifiquen p53 perque p53- suposa problemes en el llenguatge de R per la presència de "-"
matriu_contrast <- makeContrasts ( CvsOb = Ctrl - Obes,
CvsOb_OF = Ctrl - Obes_OF,
ObvsOb_OF = Obes - Obes_OF,
p53_CvsOb = p53_Ctrl - p53_Obes,
p53_CvsOb_OF = p53_Ctrl - p53_Obes_OF,
p53_ObvsOb_OF = p53_Obes - p53_Obes_OF,
levels=matriu_disseny)
fit<-lmFit(filtered_data,matriu_disseny)
fit.main<-contrasts.fit(fit,matriu_contrast)
fit.main<-eBayes(fit.main)
Tab_CvsOb <- topTable(fit.main, number = nrow(fit.main),
coef="CvsOb", adjust="fdr")
Tab_CvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="CvsOb_OF", adjust="fdr")
Tab_ObvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="ObvsOb_OF", adjust="fdr")
Tab_p53_CvsOb <- topTable(fit.main, number = nrow(fit.main),
coef="p53_CvsOb", adjust="fdr")
Tab_p53_CvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="p53_CvsOb_OF", adjust="fdr")
Tab_p53_ObvsOb_OF <- topTable(fit.main, number = nrow(fit.main),
coef="p53_ObvsOb_OF", adjust="fdr")
head(Tab_CvsOb)
head(Tab_CvsOb_OF)
head(Tab_ObvsOb_OF)
head(Tab_p53_CvsOb)
head(Tab_p53_CvsOb_OF)
head(Tab_p53_ObvsOb_OF)
topTab <- cbind(PROBEID=rownames(Tab_CvsOb), Tab_CvsOb)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = "zebrafish.db"))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
topTab
thePackage <- eval(parse(text = "zebrafish.db"))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
library(pd.zebgene.1.1.st)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = "pd.zebgene.1.1.st"))
thePackage
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
library(zebrafishcdf)
thePackage <- eval(parse(text = "zebrafishcdf"))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
library(zebrafish.db0)
library(zebrafish.db0)
thePackage <- eval(parse(text = "zebrafish.db0"))
library(zebrafish.db0)
thePackage <- eval(parse(text = "zebrafish.db0"))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
library(zebrafish.db)
anotatedTab_CvsOb<-annotatedTable(Tab_CvsOb,anotationsPackage="zebrafish.db")
thePackage <- eval(parse(text = "zebrafish.db"))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTable <- function(topTab, anotPackage)
{
topTab <- cbind(PROBEID=rownames(topTab), topTab)
myProbes <- rownames(topTab)
thePackage <- eval(parse(text = anotPackage))
geneAnots <- select(thePackage, myProbes, c("SYMBOL", "ENTREZID", "GENENAME"))
annotatedTopTab<- merge(x=geneAnots, y=topTab, by.x="PROBEID", by.y="PROBEID")
return(annotatedTopTab)
}
thePackage <- eval(parse(text = "zebrafish.db"))
keys(thePackage)
keys(thePackage,"PROBEID")
res<-decideTests(fit.main, method="separate", adjust.method="fdr", p.value=0.5, lfc=1)
sum.res.rows<-apply(abs(res),1,sum)
res.selected<-res[sum.res.rows!=0,]
print(summary(res))
#Generación diagrama de Venn
vennDiagram (res.selected[,1:6], cex=0.9)
#Generación diagrama de Venn
vennDiagram (res.selected[,1:3], cex=0.9)
title("Gens en común entre totes les comparacions \n Gens seleccionats amb FDR < 0.5 y logFC > 1")
#Generación diagrama de Venn
vennDiagram (res.selected[,1:3], cex=0.9)
title("Gens en común entre les comparacions p53- \n Gens seleccionats amb FDR < 0.5 y logFC > 1")
#Generación diagrama de Venn
vennDiagram (res.selected[,4:6], cex=0.9)
title("Gens en común entre les comparacions p53+ \n Gens seleccionats amb FDR < 0.5 y logFC > 1")
#Generación diagrama de Venn
vennDiagram (res.selected[,1:3], cex=0.9)
title("Gens en común entre les comparacions p53-")
#Generación diagrama de Venn
vennDiagram (res.selected[,4:6], cex=0.9)
title("Gens en común entre les comparacions p53+")
#Almacenamiento de Diagrama de Venn en la carpeta figures
tiff("resultats/VennPlotp53-.tiff", res = 150, width = 5.5, height = 5.5, units = 'in')
vennDiagram (res.selected[,1:3], cex=0.9)
title("Gens en común entre les comparacions p53-")
dev.off()
tiff("resultats/VennPlotp53+.tiff", res = 150, width = 5.5, height = 5.5, units = 'in')
vennDiagram (res.selected[,4:6], cex=0.9)
title("Gens en común entre les comparacions p53+")
dev.off()
res<-decideTests(fit.main, method="separate", adjust.method="fdr", p.value=0.5, lfc=1)
BiocManager::install("clusterProfiler")
class(pd.zebgene.1.1.st)
keytypes(pd.zebgene.1.1.st)
class(pd.zebgene.1.1.st)
